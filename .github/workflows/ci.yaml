name: piphos CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: Check code formatting, check linting and dry-run release
    timeout-minutes: 10

    strategy:
      matrix:
        go-version: [oldstable, stable]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check Go code formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            gofmt -s -l .
            echo "Please format Go code by running: go fmt ./..."
            exit 1
          fi
      - name: Lint Go code
        run: |
          go vet ./...
      - name: Install GoReleaser
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.go-version == 'stable'
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true
          distribution: goreleaser
          version: "~> v2"
      - name: Gorelease dry-run
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.go-version == 'stable'
        run: |
          goreleaser release --skip=publish --snapshot --fail-fast --clean
